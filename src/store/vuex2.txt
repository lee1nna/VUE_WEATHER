1. Vuex란?

- 데이터를 store에 저장하고, 프로젝트 전체에서 사용할 수 있도록 해주는 것이 Vuex이다.
- 모든 Vuex 애플리케이션의 중심에는 store가 있다. 저장소(store)는 애플리케이션 상태를 저장하고 있는 컨테이너이다.
- Vuex 저장소가 일반 전역 개체와 두 가지 다른 점이 있다. Vuex store는 반응형이다. Vue 컴포넌트는 저장소의 상태(state)를 검색할 때,
  저장소의 상태에 정의된 변수 값의 변경 여부를 바로 알 수 있다. 저장소의 상태를 직접 변경할 수 없다.
  저장소의 상태를 변경하는 유일한 방법은 명시적인 커밋을 이용한 변이이다. 이렇게 하면 모단 상태에 대한 추적이 가능한 기록이 남을 수 있으며
  툴을 사용하여 앱을 더 잘 이해할 수 있다.

import { createStore } from 'vuex';

const store = createStore({
  state() {
    return {
      count: 0,
    }
  },
  mutations: {
    increment(state) {
      state.count++;
    }
  }
}); 

export default store;

Vue 컴포넌트에서는 this.$store로 접근이 가능하다.

<template>
  <p>Count : {{ count }}</p>
  <button type="button" @click="increment">Increment</button>
</template>

<script>
  export default {
    computed: {
      count() {
        retrun this.$store.state.count;
      }
    }
    methods: {
      increment() {
        this.$store.commit('increment');
      }
    }
  }
</script>

여기서 저장소의 state에 바로 접근해서 변경하는 것이 아니라, commit를 통해서만 변경할 수 있다.
